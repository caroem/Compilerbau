SCANNER expr_scan PARSER expr_pars
IMPORT {
}

EXPORT {
}

GLOBAL {

#@ line 12 "expr.pars"

 # include <stdio.h>


#@ line 16 "expr_pars.lrk"
# ifdef CommonParsAttrs
typedef struct { CommonParsAttrs } yytCommonParsAttrs;
#  define yyCommon yytCommonParsAttrs Common;
#  define yyCommonParsAttrs CommonParsAttrs
# else
#  define yyCommon
#  define yyCommonParsAttrs
# endif


typedef union {
expr_scan_tScanAttribute Scan;
yyCommon
} tParsAttribute;
}

LOCAL {
}

BEGIN {
}

CLOSE {
}

TOKEN

int_const = 1
float_const = 2
string_const = 3
identifier = 4
'#' = 5
';' = 6
'int' = 7
'float' = 8
'String' = 9
'BEGIN' = 10
'=' = 11
'+' = 12
'-' = 13
'*' = 14
'/' = 15
'<' = 16
'>' = 17
'==' = 18
'(' = 19
')' = 20
identfier = 21
'if' = 22
'then' = 23
'else' = 24
'while' = 25
'for' = 26
'END' = 27

OPER

LEFT  '+' '-'
LEFT  '*' '/'

RULE

root : x .

#@ line 24 "expr.pars"
x : '#' name ';' var exec .

#@ line 29 "expr.pars"
name : identifier .

#@ line 34 "expr.pars"
var : typdef name ';' .

var : var var .

#@ line 41 "expr.pars"
typdef : 'int' .

typdef : 'float' .

typdef : 'String' .

#@ line 50 "expr.pars"
exec : 'BEGIN' body 'END' ';' .

exec : .

#@ line 57 "expr.pars"
body : varallocation .

body : statement .

body : body body .

#@ line 66 "expr.pars"
statement : ifstmt .

statement : whilestmt .

statement : forstmt .

#@ line 75 "expr.pars"
varallocation : name '=' expr ';' .

varallocation : name '=' exprstring .

#@ line 82 "expr.pars"
ifstmt : 'if' condition 'then' body .

ifstmt : 'if' condition 'then' body 'else' body .

#@ line 89 "expr.pars"
whilestmt : 'while' '(' expr ')' body .

#@ line 94 "expr.pars"
forstmt : 'for' '(' int_const ')' body .

#@ line 99 "expr.pars"
condition : '(' expr ')' .

#@ line 105 "expr.pars"
expr : expr '+' expr .

expr : expr '-' expr .

expr : expr '*' expr .

expr : expr '/' expr .

expr : expr '<' expr .

expr : expr '>' expr .

expr : expr '==' expr .

expr : '(' expr ')' .

expr : int_const .

expr : float_const .

expr : identifier .

#@ line 130 "expr.pars"
exprstring : identfier .

exprstring : string_const .

exprstring : exprstring '+' exprstring .
